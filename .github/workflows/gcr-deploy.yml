# europe-west1-docker.pkg.dev/prompton-389007/prompton-images/prompton-api:299e299d840df97571731f9f552e9f420fcb33ec
# europe-west1-docker.pkg.dev/prompton-389007/prompton-images/prompton-api@sha256:83b7010f30645830de843a61127e757e32afdca1fc35a4c256abaccfbd27fdcf

# See more: https://github.com/marketplace/actions/deploy-to-cloud-run
name: Build and Deploy to Cloud Run

on: [push, pull_request]

jobs:
  deploy:
    environment: staging
    # $ {{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    env:
      PROJECT_ID: ${{ vars.GC_PROJECT_ID }}
      GAR_LOCATION: ${{ vars.GC_GAR_LOCATION }}
      SERVICE: ${{ vars.GC_SERVICE_NAME }}
      REGION: ${{ vars.GC_SERVICE_REGION }}
      IMAGE_URL: ${{ vars.GC_GAR_LOCATION }}-docker.pkg.dev/${{ vars.GC_PROJECT_ID }}/${{ vars.GC_ARTIFACTS_REPO_NAME }}/${{ vars.GC_SERVICE_NAME }}

    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_URL}}
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=pr
            type=pep440,pattern={{version}}
            type=schedule

      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.GC_WIF_PROVIDER }}" # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: "${{ secrets.GC_WIF_SERVICE_ACCOUNT }}" # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # BEGIN - Docker auth and build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth if not pull request
        if: ${{ github.event_name != 'pull_request' }}
        id: docker-auth
        uses: docker/login-action@v2
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build Container and push if not pull request
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          # push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # END - Docker auth and build

      - name: Debug
        run: echo ${{ steps.meta.outputs.labels }}

      - name: Deploy to Cloud Run if not pull request
        if: ${{ github.event_name != 'pull_request' }}
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.IMAGE_URL}}:${{ steps.meta.outputs.labels.org.opencontainers.image.revision }}
          env_vars: |
            MONGO_DATABASE=${{ vars.MONGO_DATABASE }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          # TODO: review if these are exposed anywhere and need to be passed as secret
          # secrets: |

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
