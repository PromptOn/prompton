"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PromptonApiClient = void 0;
const Client_1 = require("./api/resources/serverStatus/client/Client");
const Client_2 = require("./api/resources/authentication/client/Client");
const Client_3 = require("./api/resources/prompts/client/Client");
const Client_4 = require("./api/resources/promptVersions/client/Client");
const Client_5 = require("./api/resources/inferences/client/Client");
const Client_6 = require("./api/resources/orgs/client/Client");
const Client_7 = require("./api/resources/users/client/Client");
class PromptonApiClient {
    constructor(options) {
        this.options = options;
    }
    get serverStatus() {
        var _a;
        return ((_a = this._serverStatus) !== null && _a !== void 0 ? _a : (this._serverStatus = new Client_1.ServerStatus(this.options)));
    }
    get authentication() {
        var _a;
        return ((_a = this._authentication) !== null && _a !== void 0 ? _a : (this._authentication = new Client_2.Authentication(this.options)));
    }
    get prompts() {
        var _a;
        return ((_a = this._prompts) !== null && _a !== void 0 ? _a : (this._prompts = new Client_3.Prompts(this.options)));
    }
    get promptVersions() {
        var _a;
        return ((_a = this._promptVersions) !== null && _a !== void 0 ? _a : (this._promptVersions = new Client_4.PromptVersions(this.options)));
    }
    get inferences() {
        var _a;
        return ((_a = this._inferences) !== null && _a !== void 0 ? _a : (this._inferences = new Client_5.Inferences(this.options)));
    }
    get orgs() {
        var _a;
        return ((_a = this._orgs) !== null && _a !== void 0 ? _a : (this._orgs = new Client_6.Orgs(this.options)));
    }
    get users() {
        var _a;
        return ((_a = this._users) !== null && _a !== void 0 ? _a : (this._users = new Client_7.Users(this.options)));
    }
}
exports.PromptonApiClient = PromptonApiClient;
