/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
import * as PromptonApi from "../../..";
export declare namespace PromptVersions {
    interface Options {
        environment: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class PromptVersions {
    protected readonly options: PromptVersions.Options;
    constructor(options: PromptVersions.Options);
    /**
     * @throws {@link PromptonApi.BadRequestError}
     * @throws {@link PromptonApi.UnauthorizedError}
     * @throws {@link PromptonApi.NotFoundError}
     * @throws {@link PromptonApi.UnprocessableEntityError}
     */
    getPromptVersionsList(request?: PromptonApi.GetPromptVersionsListRequest): Promise<PromptonApi.PromptVersionRead[]>;
    /**
     * @throws {@link PromptonApi.BadRequestError}
     * @throws {@link PromptonApi.UnauthorizedError}
     * @throws {@link PromptonApi.UnprocessableEntityError}
     */
    addPromptVersion(request: PromptonApi.PromptVersionCreate): Promise<unknown>;
    /**
     * @throws {@link PromptonApi.BadRequestError}
     * @throws {@link PromptonApi.UnauthorizedError}
     * @throws {@link PromptonApi.NotFoundError}
     * @throws {@link PromptonApi.UnprocessableEntityError}
     */
    getPromptVersionById(id: string): Promise<PromptonApi.PromptVersionRead>;
    /**
     * @throws {@link PromptonApi.BadRequestError}
     * @throws {@link PromptonApi.UnauthorizedError}
     * @throws {@link PromptonApi.NotFoundError}
     * @throws {@link PromptonApi.UnprocessableEntityError}
     */
    updatePromptVersion(id: string, request?: PromptonApi.PromptVersionUpdate): Promise<PromptonApi.PromptVersionRead>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
